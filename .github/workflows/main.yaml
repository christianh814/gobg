name: Docker Image CI

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  ###push:
    ###branches: [ main ]
jobs:
  build:
    environment:
      name: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: gobg
      - name: Set Variables
        id: vars
        run: |
          cd ${GITHUB_WORKSPACE}/gobg
          echo ::set-output name=image_tag::$(echo $GITHUB_SHA  | cut -c1-6)
          cd ${GITHUB_WORKSPACE}/gobg
          echo ::set-output name=commit_msg::$(git log -1 --pretty="%s")
          cd -
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & push the Docker image
        env:
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/gobg:${{ steps.vars.outputs.image_tag }}
        run: |
          cd ${GITHUB_WORKSPACE}/gobg
          docker build . --file Containerfile --tag $IMAGE && docker push $IMAGE
          echo "Image should be accessible to your local machine (after docker login) by:"
          echo "docker pull $IMAGE"
          docker pull $IMAGE
          cd -
      - name: Checkout Deploy Repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.DEPLOY_REPOSITORY }}
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          path: gobg-deploy
      - name: Set image on the rollout config
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.spec.template.spec.containers.[0].image |= "${{ secrets.DOCKERHUB_USERNAME }}/gobg:${{ steps.vars.outputs.image_tag }}"' ${GITHUB_WORKSPACE}/gobg-deploy/deploy/overlays/rollouts/rollout.yaml
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          path: gobg-deploy
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          commit-message: Update Image to ${{ steps.vars.outputs.image_tag }}
          committer: GitHub Action Bot <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: ${{ steps.vars.outputs.image_tag }}
          delete-branch: true
          title: '[PR Bot] Update image to ${{ steps.vars.outputs.image_tag }}'
          body: |
            Update:
            - Updated image to ${{ steps.vars.outputs.image_tag }}
            - Image has commit message: ${{ steps.vars.outputs.commit_msg }}
          draft: false
##
##
